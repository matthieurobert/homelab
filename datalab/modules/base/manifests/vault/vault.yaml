apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-k8s
  namespace: vault
  annotations:
    argocd.argoproj.io/sync-wave: "0"
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vault-k8s
  namespace: vault
  annotations:
    argocd.argoproj.io/sync-wave: "0"
rules:
  - apiGroups: [""]
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - authorization.k8s.io
    resources:
      - selfsubjectrulesreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vault-k8s
  namespace: vault
  annotations:
    argocd.argoproj.io/sync-wave: "0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vault-k8s
subjects:
  - kind: ServiceAccount
    name: vault-k8s
    namespace: vault
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: k8s-vault-store
  namespace: vault
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  provider:
    kubernetes:
      # Only pull secrets from this namespace
      remoteNamespace: vault
      server:
        caProvider:
          namespace: vault
          type: ConfigMap
          name: kube-root-ca.crt
          key: ca.crt
      auth:
        serviceAccount:
          name: vault-k8s
          namespace: vault